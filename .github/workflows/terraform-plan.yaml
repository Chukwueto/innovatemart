name: 'Terraform Plan'

on:
  pull_request:
    branches:
      - main
      - develop
      - 'feature/**'

env:
  TF_VERSION: '1.6.0'
  AWS_REGION: 'us-east-1'

permissions:
  contents: read
  pull-requests: write
  issues: write

jobs:
  terraform-plan:
    runs-on: ubuntu-latest
    outputs:
      terraform-plan-exitcode: ${{ steps.plan.outputs.exitcode }}

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ env.TF_VERSION }}
        terraform_wrapper: false

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Terraform Init
      id: init
      run: |
        terraform init \
          -backend-config="bucket=${{ secrets.TF_STATE_BUCKET }}" \
          -backend-config="key=${{ github.repository }}/terraform.tfstate" \
          -backend-config="region=${{ env.AWS_REGION }}"

    - name: Terraform Plan
      id: plan
      run: terraform plan -detailed-exitcode -no-color -out=tfplan
      continue-on-error: true

    - name: Save Terraform Plan
      if: steps.plan.outputs.exitcode == 2
      run: terraform show -no-color tfplan > tfplan.txt

    - name: Upload Plan Artifact
      if: steps.plan.outputs.exitcode == 2
      uses: actions/upload-artifact@v4
      with:
        name: terraform-plan-${{ github.sha }}
        path: |
          tfplan
          tfplan.txt
        retention-days: 5

    - name: Comment PR with Plan Results
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          let planResult = '';
          let planOutput = '';

          if ('${{ steps.plan.outputs.exitcode }}' === '0') {
            planResult = '✅ No changes';
          } else if ('${{ steps.plan.outputs.exitcode }}' === '2') {
            planResult = '📋 Changes detected';
            try {
              planOutput = fs.readFileSync('tfplan.txt', 'utf8');
              if (planOutput.length > 60000) {
                planOutput = planOutput.substring(0, 60000) + '\n\n... (truncated)';
              }
            } catch (err) {
              planOutput = 'Plan output not available';
            }
          } else {
            planResult = '❌ Plan failed';
          }

          const output = `
          ## Terraform Plan Results 🏗️
          **Result:** ${planResult}

          <details>
          <summary>📋 Terraform Plan Output</summary>

          \`\`\`
          ${planOutput}
          \`\`\`

          </details>
          `;

          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: output
          });

    - name: Plan Summary
      run: |
        echo "## Terraform Plan Summary 📝" >> $GITHUB_STEP_SUMMARY
        echo "- **Init:** ${{ steps.init.outcome }}" >> $GITHUB_STEP_SUMMARY

        if [ "${{ steps.plan.outputs.exitcode }}" == "0" ]; then
          echo "- **Plan Result:** ✅ No changes detected" >> $GITHUB_STEP_SUMMARY
        elif [ "${{ steps.plan.outputs.exitcode }}" == "2" ]; then
          echo "- **Plan Result:** 📋 Changes detected" >> $GITHUB_STEP_SUMMARY
        else
          echo "- **Plan Result:** ❌ Plan failed" >> $GITHUB_STEP_SUMMARY
        fi
